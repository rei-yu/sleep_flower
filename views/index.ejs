<!DOCTYPE html>
<html>
  <title>Sleep Flower</title>
  <head>
    <link href="http://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <!--Import materialize.css-->
    <link type="text/css" rel="stylesheet" href="/styles/materialize.min.css"  media="screen,projection"/>

    <!--Let browser know website is optimized for mobile-->
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <script type="text/javascript" src="/javascript/jquery-1.11.3.js"></script>
    <script type="text/javascript" src="/javascript/materialize.min.js"></script>
  </head>
  <body>
    <!-- Sign in with Facebook Page -->
    <script>
      // This function is called when someone finishes with the Login
      // Button.  See the onlogin handler attached to it in the sample
      // code below.
      function checkLoginState() {
        FB.getLoginStatus();
      }

      $.ajax({
        type: 'GET',
        url: 'https://spreadsheets.google.com/feeds/cells/1v2dMcgwUvncDPJC60-thcqD3Kbe77o0jCJkGVRfuAd0/otznxhp/public/values?alt=json',
        dataType: 'jsonp',
        cache: false,
        success: function(data){ // 通信が成功した時
          var sheetsEntry = data.feed.entry; // 実データ部分を取得
          categorized = catedorizeData(sheetsEntry); // データを整形して配列で返す
          renderForm(categorized); // レンダリング用の関数を呼ぶ
        },
        error: function(){ // 通信が失敗した時
          console.log('error get from google spreadsheet');
        }
      });

      function catedorizeData(sheetsEntry){ // データを整形して配列で返す
        var categorized = [];
        for(var i = 0; i<sheetsEntry.length; i++){
          var dataCol = sheetsEntry[i].gs$cell.col;
          var dataRow = sheetsEntry[i].gs$cell.row;

          if(dataCol == 1 && dataRow != sheetsEntry[i+1].gs$cell.row){
            categorized[categorized.length] = [];
          }
          categorized[categorized.length-1] = sheetsEntry[i];
        }
        return categorized;
      }

      function renderForm(categorized){ // レンダリング用の関数
        var target = $('.formSubmit');
        categorized.forEach(function(areaCats){
          target.before('<h2>'+areaCats[0].gs$cell.$t+'</h2>');
          target.before('<dl>');
          for(var i = 1; i<areaCats.length; i+=2){
            target.before('<dt><label><input name="cats" type="checkbox" />'+areaCats[i].gs$cell.$t+'</label></dt>');
            target.before('<dd>原産地：'+areaCats[i+1].gs$cell.$t+'</dd>');
          }
          target.before('</dl>');
        });
      }

      window.fbAsyncInit = function() {
      FB.init({
        appId      : '860450624074844',
        cookie     : true,  // enable cookies to allow the server to access
                            // the session
        xfbml      : true,  // parse social plugins on this page
        version    : 'v2.5' // use version 2.2
      });

      // Now that we've initialized the JavaScript SDK, we call
      // FB.getLoginStatus().  This function gets the state of the
      // person visiting this page and can return one of three states to
      // the callback you provide.  They can be:
      //
      // 1. Logged into your app ('connected')
      // 2. Logged into Facebook, but not your app ('not_authorized')
      // 3. Not logged into Facebook and can't tell if they are logged into
      //    your app or not.
      //
      // These three cases are handled in the callback function.

      FB.getLoginStatus(function(response) {
        if (response.authResponse) {
              fbUserId = response.authResponse.userID;
              token = response.authResponse.accessToken;
              $('.setting').show();
              // render_friends();
              checkCallback();
          }
          else {
              $('#facebook_oauth').show();
              FB.login(function(response) {
                  if (response.authResponse) {
                      fbUserId = response.authResponse.userID;
                      token = response.authResponse.accessToken;
                      $('.setting').show();
                      render_friends();
                      checkCallback();
                  }
                  else {
                       console.log('User cancelled login or did not fully authorize.');
                  }
              }, {scope: 'user_friends'});
          }
        },true);
      };

      // Load the SDK asynchronously
      (function(d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
      }(document, 'script', 'facebook-jssdk'));

      // Here we run a very simple test of the Graph API after login is
      // successful.  See statusChangeCallback() for when this call is made.
      function checkCallback() {
        console.log('Welcome!  Fetching your information.... ');
        FB.api('/me', function(response) {
          console.log('Successful login for: ' + response.name);
        });
      }

      // function render_friends(){
      //   FB.api('/me/friends', function(response) {
      //     response.data.forEach(function (user) {
      //       console.log(user.name);
      //       showFriend(user);
      //     })
      //   });
      // }

      // function showFriend(user) {
      //   $('div.setting').append(
      //     '<div class="user_' + user.id + '"><a href="/friends/?id=' + user.id + '">'
      //         + user.name +
      //       '</a></div>'
      //   );
      // }
    </script>

    <div class="setting" style="display: none;">
      <nav>
        <div class="nav-wrapper">
          <a href="#!" class="brand-logo" id="satomi-custom">Set Sharing Scope</a>
        </div>
      </nav>

      <div class="default">
        <a href="/friends/?id=default">Default for All Friends</a>
      </div>

      <div class="formSubmit">
        <a href="/friends/?id=default">JSON Result</a>
      </div>
    </div>
  </body>
</html>
